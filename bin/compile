#!/usr/bin/env bash
################################################################################
# bin/compile <build-dir> <cache-dir>                                          #
################################################################################

# ---------------------------------------------------------------------------- #
# 変数を設定                                                                   #
# ---------------------------------------------------------------------------- #
BIN_DIR=$(dirname $0)
BUILDPACK_DIR=`cd $(dirname $0); cd ..; pwd`
BUILD_DIR=$1
CACHE_DIR=$2

APACHE_VERSION="2.4.37"
APACHE_PATH="apache"
PHP_VERSION="5.6.38"
PHP_PATH="php"

# ---------------------------------------------------------------------------- #
# ドキュメントルート(/app/www/)の設定                                          #
# ---------------------------------------------------------------------------- #
cd $BUILD_DIR

mkdir -p $CACHE_DIR/www
mv * $CACHE_DIR/www
mv $CACHE_DIR/www .

# ---------------------------------------------------------------------------- #
# コンパイル済みの Apache HTTP Server を展開                                   #
# ---------------------------------------------------------------------------- #
APACHE_DIR="${BUILDPACK_DIR}/download/httpd/2.4/apache-$APACHE_VERSION.tar.gz"
echo "-----> Bundling Apache version $APACHE_VERSION"
tar -xvf $APACHE_DIR

# ---------------------------------------------------------------------------- #
# コンパイル済みの PHP を展開                                                  #
# ---------------------------------------------------------------------------- #
PHP_DIR="${BUILDPACK_DIR}/download/php/5.6/php-$PHP_VERSION.tar.gz"
echo "-----> Bundling PHP version $PHP_VERSION"
tar -xvf $PHP_DIR 

# ---------------------------------------------------------------------------- #
# httpd.conf と php.ini を上書き                                               #
# ---------------------------------------------------------------------------- #
ls -al $BUILDPACK_DIR
cp $BUILDPACK_DIR/config/httpd.conf $APACHE_PATH/conf
cp $BUILDPACK_DIR/config/php.ini $PHP_PATH

# ---------------------------------------------------------------------------- #
# php のパスを設定                                                             #
# ---------------------------------------------------------------------------- #
mkdir -p bin
ln -s /app/php/bin/php bin/php

# ---------------------------------------------------------------------------- #
# db2 driverを設定                                                             #
# ---------------------------------------------------------------------------- #
function download_and_install_ibm_db() {
  CLI_URL="https://public.dhe.ibm.com/ibmdl/export/pub/software/data/db2/drivers/odbc_cli/linuxx64_odbc_cli.tar.gz"

  echo "Downloading IBM Data Server Driver...."
  curl -LO "$CLI_URL"

  # Extracting and Cleaning DS Driver
  rm -rf clidriver
  tar -xzf linuxx64_odbc_cli.tar.gz

  echo "Downloading autoconf..."
  curl -LO http://ftp.gnu.org/gnu/autoconf/autoconf-2.69.tar.gz

  echo "Downloading m4..."
  curl -LO http://ftp.gnu.org/pub/gnu/m4/m4-1.4.13.tar.gz

  # Extracting m4 and autoconf
  tar -xzf autoconf-2.69.tar.gz
  tar -xzf m4-1.4.13.tar.gz

  echo "Installing m4 and autoconf ..."
  cd m4-1.4.13
  ./configure --prefix=$BUILD_DIR/m4
  make
  make install
  export PATH=$BUILD_DIR/m4/bin:$PATH

  cd $BUILD_DIR/autoconf-2.69
  ./configure --prefix=$BUILD_DIR/autoconf
  make
  make install

  cd $BUILD_DIR
  #Cleaning clidriver, m4 and autoconf
  rm -rf linuxx64_odbc_cli.tar.gz
  rm -rf m4-1.4.13.tar.gz
  rm -rf m4-1.4.13
  rm -rf autoconf-2.69.tar.gz
  rm -rf autoconf-2.69

  ln -s $BUILD_DIR/php /app/php
  ln -s $BUILD_DIR/vendor /app/vendor

  export PATH=$BUILD_DIR/autoconf/bin:/app/php/bin:$PATH
  export IBM_DB_HOME=$BUILD_DIR/clidriver
  export LD_LIBRARY_PATH=/app/vendor/mcrypt/lib:$LD_LIBRARY_PATH
  export PHP_AUTOCONF=$BUILD_DIR/autoconf/bin/autoconf
  export PHP_AUTOHEADER=$BUILD_DIR/autoconf/bin/autoheader

  echo "Installing ibm_db2 ..."
  pecl install ibm_db2
}

if [ -f clidriver/lib/libdb2.so ]; then
  # we have from cache, just restore php's db2.so
  echo "-------> restoring ibm_db2 from cache"
  mv ibm_db2.so php/lib/php/extensions/no-debug-non-zts-20131226/
  echo "-------> restored ibm_db2"
else
  echo "-------> downloading and installing ibm_db2"
  download_and_install_ibm_db
  echo "-------> caching ibm_db2 and dependencies"
  for dir in $CACHED_DIRS; do
    mkdir -p $CACHE_DIR/$dir
    cp -R clidriver $CACHE_DIR/$dir &> /dev/null || true
    cp php/lib/php/extensions/no-debug-non-zts-20131226/ibm_db2.so $CACHE_DIR/$dir &> /dev/null || true
    echo "-------> caching ibm_db2 done"
  done
fi

# ---------------------------------------------------------------------------- #
# Apache HTTP Server 起動スクリプト(boot.sh)作成                               #
# ---------------------------------------------------------------------------- #
cat >> boot.sh <<EOF
for var in \`env|cut -f1 -d=\`; do
  echo "PassEnv \$var" >> /app/apache/conf/httpd.conf;
done
touch /app/apache/logs/error_log
touch /app/apache/logs/access_log
tail -F /app/apache/logs/error_log &
tail -F /app/apache/logs/access_log &
export LD_LIBRARY_PATH=/app/php/lib/php:/app/clidriver/lib
export PHP_INI_SCAN_DIR=/app/www
echo "Launching apache"
exec /app/apache/bin/httpd -DNO_DETACH
EOF

chmod +x boot.sh

# ---------------------------------------------------------------------------- #
# キャッシュディレクトリをクリア                                               #
# ---------------------------------------------------------------------------- #
rm -rf $CACHE_DIR
